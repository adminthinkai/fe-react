import React, { useEffect, useState } from 'react';
import { ButtonBordered } from 'src/components/ButtonBorderedSmall';
import { ButtonGreenSmall } from 'src/components';
import { useUploadLogoMutation } from 'src/api/brandingApi';

type EditNamePropsType = {
  handleCansel: () => void;
  id: string;
};

export const ChangeLogo: React.FC<EditNamePropsType> = ({ handleCansel, id }) => {
  const [handleUpload, { isSuccess }] = useUploadLogoMutation();
  const [image, setImage] = useState<string | undefined>(undefined);
  const [data, setData] = useState<FormData | null>(null);
  const getFileInfo = e => {
    const formData = new FormData();
    setImage(e.target.files[0]);
    formData.append('logo', e.target.files[0]);
    formData.append('id', id);
    setData(formData);
  };
  /* const onImageChange = (event: React.ChangeEvent<HTMLInputElement>, number: number) => {
    if (event.target.files && event.target.files[0]) {
      switch (number) {
        case 1:
          setImage1(URL.createObjectURL(event.target.files[0]));
          break;
        case 2:
          setImage2(URL.createObjectURL(event.target.files[0]));
          break;
        case 3:
          setImage3(URL.createObjectURL(event.target.files[0]));
          break;
        case 4:
          setImage4(URL.createObjectURL(event.target.files[0]));
          break;
        case 5:
          setImage5(URL.createObjectURL(event.target.files[0]));
          break;
        default:
          break;
      }
    }
  }; */

  const onSubmitUpload = () => {
    if (data) {
      handleUpload(data);
    }
  };
  useEffect(() => {
    if (isSuccess) {
      handleCansel();
    }
  }, [handleCansel, isSuccess]);

  return (
    <div>
      <div className="flex flex-col gap-2.5">
        <h1 className="text-neutral-700 text-2xl font-bold font-['Lato']">
          Edit your app logo
        </h1>
        <p className=" text-wrap text-neutral-700 opacity-70 text-base font-normal font-['Lato']">
          Your logos will be visible to users who are browsing on wide screens. Your email
          logo will be included in all emails generated by the app. Your icons will only
          be visible to users who are browsing on mobile.
          <br />
          <br />
          We recommend using SVG files for your website logos and PNG files for your email
          and browser logos.
        </p>
      </div>
      <div className="mt-7 flex flex-col gap-5">
        {/* <div className="flex flex-1 flex-row gap-7">
          <div className="flex flex-col flex-1  gap-5">
            <h3 className=" text-neutral-700 opacity-70 text-base font-normal font-['Lato']">
              Website dark logo (320 x 86)
            </h3>
            <div className="w-full relative  box-border overflow-hidden h-[130px] rounded-[10px] border border-solid border-neutral-200">
              <label className="flex flex-1 h-full " htmlFor="inputFile1">
                {image1 ? (
                  <img alt="logo1" className="absolute flex flex-1 cover" src={image1} />
                ) : (
                  <div className="flex flex-1 h-full justify-center align-middle ">
                    <div>thinkAI</div>
                  </div>
                )}
              </label>
              <input
                id="inputFile1"
                type="file"
                onChange={e => onImageChange(e, 1)}
                className="filetype"
                accept="image/*"
                hidden
              />
            </div>
          </div>
          <div className="flex flex-col flex-1  gap-5">
            <h3 className=" text-neutral-700 opacity-70 text-base font-normal font-['Lato']">
              Website dark logo (320 x 86)
            </h3>
            <div className="w-full relative  box-border overflow-hidden h-[130px] rounded-[10px] border border-solid border-neutral-200">
              <label className="flex flex-1 h-full " htmlFor="inputFile2">
                {image2 ? (
                  <img alt="logo" className="absolute flex flex-1 cover" src={image2} />
                ) : (
                  <div className="flex flex-1 h-full justify-center align-middle ">
                    <div>thinkAI</div>
                  </div>
                )}
              </label>
              <input
                id="inputFile2"
                type="file"
                onChange={e => onImageChange(e, 2)}
                className="filetype"
                accept="image/*"
                hidden
              />
            </div>
          </div>
        </div>
        <div className="flex flex-1 flex-row gap-7">
          <div className="flex flex-col flex-1  gap-5">
            <h3 className=" text-neutral-700 opacity-70 text-base font-normal font-['Lato']">
              Website dark logo (320 x 86)
            </h3>
            <div className="w-full relative  box-border overflow-hidden h-[130px] rounded-[10px] border border-solid border-neutral-200">
              <label className="flex flex-1 h-full " htmlFor="inputFile3">
                {image3 ? (
                  <img alt="logo" className="absolute flex flex-1 cover" src={image3} />
                ) : (
                  <div className="flex flex-1 h-full justify-center align-middle ">
                    <div>thinkAI</div>
                  </div>
                )}
              </label>
              <input
                id="inputFile3"
                type="file"
                onChange={e => onImageChange(e, 3)}
                className="filetype"
                accept="image/*"
                hidden
              />
            </div>
          </div>
          <div className="flex flex-col flex-1  gap-5">
            <h3 className=" text-neutral-700 opacity-70 text-base font-normal font-['Lato']">
              Website dark logo (320 x 86)
            </h3>
            <div className="w-full relative  box-border overflow-hidden h-[130px] rounded-[10px] border border-solid border-neutral-200">
              <label className="flex flex-1 h-full " htmlFor="inputFile4">
                {image4 ? (
                  <img alt="logo" className="absolute flex flex-1 cover" src={image4} />
                ) : (
                  <div className="flex flex-1 h-full justify-center align-middle ">
                    <div>thinkAI</div>
                  </div>
                )}
              </label>
              <input
                id="inputFile4"
                type="file"
                onChange={e => onImageChange(e, 4)}
                className="filetype"
                accept="image/*"
                hidden
              />
            </div>
          </div>
        </div> */}
        <div className="flex  flex-0.5 flex-col gap-5">
          <h3 className=" text-neutral-700 opacity-70 text-base font-normal font-['Lato']">
            Website light icon (260 x 260)
          </h3>
          <div className="w-full relative  box-border overflow-hidden h-[130px] rounded-[10px] border border-solid border-neutral-200">
            <label className="flex flex-1 h-full " htmlFor="inputFile5">
              {image ? (
                <img
                  alt="logo"
                  className="absolute flex flex-1 cover"
                  src={image || undefined}
                />
              ) : (
                <div className="flex flex-1 h-full justify-center align-middle ">
                  <div>thinkAI</div>
                </div>
              )}
            </label>
            <input
              id="inputFile5"
              type="file"
              onChange={getFileInfo}
              className="filetype"
              accept="image/*"
              hidden
            />
          </div>
        </div>
      </div>
      <div className="flex mt-5 gap-4 justify-end">
        <ButtonBordered onClick={handleCansel}>Cancel</ButtonBordered>
        <ButtonGreenSmall onClick={onSubmitUpload}>Save changes</ButtonGreenSmall>
      </div>
    </div>
  );
};
